openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "API Backend Donation UMKM - OpenAPI 3.0"
  description: |-
    Ini adalah spesifikasi Api untuk backend Donation UMKM. Dirancang agar memudahkan untuk mendesain api yang lebih terarah. 

  contact : 
    name : "Ahmad Zaky"
    email : "ahmadzaky@mhs.unsyiah.ac.id"
servers:
  - url: "http://localhost:9990/api/v1/"
    description: "API Gateway"
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"

  - url: "http://localhost:8082/api/v1/"
    description: "Service User Investore"
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main" 

  - url: "http://localhost:9992/api/v1/"
    description: "service user campaign"
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"

  - url: "http://localhost:9993/api/v1/"
    description: "service user reviewer"
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main" 
  
  - url: "http://localhost:9994/api/v1/"
    description: "Service detail & campaign "
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"

  - url: "http://localhost:9995/api/v1/"
    description: "Service transaction "
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"

  - url: "http://localhost:9996/api/v1/"
    description: "Service reviewer deatil "
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"
  
  - url: "http://localhost:9997/api/v1/"
    description: "Service return profit"
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"
  
  - url: "http://localhost:9998/api/v1/"
    description: "Service admin"
    variables: 
      environment: 
        default: "dev"
        description: "Server Enviroment"  
        enum :
          - "dev"
          - "qa"
          - "main"


security:
  - identity_server_auth:
    - api
    
# PATH Router
paths:
  # create akun user investor
  /register_investor:
      post:
        tags:
          - "User Investore"
        summary: "RegisterInvestore"
        operationId: "registerInvetore"
        description: Register for user investor
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvestore'
        responses:
          "200":
            description: Add a new user investore
            headers:
              Access-Control-Allow-Origin:
                schema:
                  type: string
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponseUserInvestore'
          '405':
            description: Invalid input
          default:
            description: unexpected error

  /login_investore:
      post:
        tags:
          - "User Investore"
        summary: "LoginInvestore"
        operationId: "loginUser"
        description: User Login
        responses:
          "200":
            description: Null response
          default:
            description: unexpected error

  /email_check:
      post:
        tags:
          - "User Investore"
        summary: "emailCheckInvestore"
        operationId: "emailCheck"
        description: Email Checker
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error           
  
  # create akun user Campaign 
  /users_campaign/register:
      post:
        tags:
          - "User Campaign"
        summary: "RegisterUserCampaign"
        operationId: "registerUserInvetore"
        description: User campaign Login
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error


  /users_campaign/login:
      post:
        tags:
          - "User Campaign"
        summary: "LoginUserCampaign"
        operationId: "loginUser"
        description: User Campaign Register
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error


# create akun user Campaign 
  /users_reviewer/register:
      post:
        tags:
          - "User reviewer"
        summary: "RegisterUserreviewer"
        operationId: "registerUserInvetore"
        description: User reviewer Login
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error


  /users_reviewer/login:
      post:
        tags:
          - "User reviewer"
        summary: "LoginUserreviewer"
        operationId: "loginUserReviewer"
        description: User reviewer Register
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

# create Campaign detail
  /campaign_detail:
      post:
        tags:
          - "Campaign Detail"
        summary: "Campaign Detail"
        operationId: "campaignDetail"
        description: Create Campaign for user Campaign
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

# create Campaign images
  /campaign_images:
      post:
        tags:
          - "Campaign images"
        summary: "Campaign images"
        operationId: "campaignImages"
        description: Create Campaign images for campaign details
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

# create reviewer detail
  /reviewer detail:
      post:
        tags:
          - "reviewer detail"
        summary: "Reviewer Detail"
        operationId: "reviewerDetail"
        description: Create reviewer for aprove campaign form campaign detail
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

# create transaction
  /transaction:
      post:
        tags:
          - "Transaction"
        summary: "Transaction to backend"
        operationId: "transaction"
        description: Create transaction from user investor to campaign detail
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

# create retutn profit
  /return_profit:
      post:
        tags:
          - "Return Profit"
        summary: "Return profit to user"
        operationId: "returnProfit"
        description: Create profit to user investor and user reviewer
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

# create transaction
  /admin_on:
      post:
        tags:
          - "ADMIN"
        summary: "Admin create"
        operationId: "admin"
        description: Create admin for accsess all data and db 
        responses:
          "201":
            description: Null response
          default:
            description: unexpected error

components:
  securitySchemes:
    # See https://demo.identityserver.io/ for configuration details.
    identity_server_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "https://demo.identityserver.io/connect/authorize"
          scopes:
            api: "api"
  schemas:   
    ApiResponseUserInvestore:
      type: object
      properties:
        meta:
          type: object  
          $ref: '#/components/schemas/StatusCodeSuccess'
        data:
          type: object    
          $ref: '#/components/schemas/UserInvestore'
      xml:
        name: '##default'
    StatusCodeSuccess:
      type: object
      properties:
        message:
          type: string
          example: Account has been registered
        code:
          type: integer
          format: int32
          example: 200
        status:
          type: string
          example: success
      xml:
        name: '##default'
    # UserInvestore    
    UserInvestore:
      type: object
      properties:
        name:
          type: string
          description: first name for user Invetore
          format: varchar(255)
          example: ahmad
        phone:
          type: integer
          description: phone whatsapp for user Invetore
          format: int(11)
          example: '62856734'
        email:
          type: string
          description: email for user Invetore
          format: varchar(255)
          example: zaky@gmail.com
        password:
          type: string
          description: password for user Invetore
          format: varchar(255)
          example: 'testing12345' 
      xml:
        name: user_investore
    # UserCampaign
    UserCampaign:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    # UserReviewer
    UserReviewer:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    #  CampaignDetail    
    CampaignDetail:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    # ReviewerDetail:
    ReviewerDetail:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    # Transaction:
    Transaction:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    # ReturnProfit    
    ReturnProfit:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    # Admin
    Admin:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'

